var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
/**
 * IonIcon 5
 * Credit https://ionic.io/ionicons
 */
import { forwardRef, Fragment } from 'react';
import { CUSTOM_ICONS } from './customs';
import { Helmet } from 'react-helmet';
/**
 * IonIcon
 * @param name The icon name. You can find it here https://ionic.io/ionicons
 * @param className To modify the span class
 */
var IonIcon = forwardRef(function (_a, ref) {
    var name = _a.name, className = _a.className, props = __rest(_a, ["name", "className"]);
    var cln = className ? 'anticon ' + className : 'anticon';
    return (_jsxs(Fragment, { children: [_jsx(Helmet, { children: _jsx("script", { type: "module", src: "https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js" }) }), _jsx("span", __assign({ className: cln }, props, { children: CUSTOM_ICONS[name] ? (_jsx("ion-icon", { ref: ref, src: CUSTOM_ICONS[name] })) : (_jsx("ion-icon", { ref: ref, name: name })) }))] }));
});
export default IonIcon;
//# sourceMappingURL=index.js.map
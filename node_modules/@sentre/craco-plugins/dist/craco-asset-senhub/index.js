"use strict";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
var path = require('path');
var defaultOptions = {
  outputFile: 'asset-senhub',
  extensions: ['.png', '.jpeg', '.jpg', '.gif', '.md', '.svg'],
  exports: ['logo', 'panels', 'readme']
};

// const tests = new RegExp()

var overrideWebpackConfig = function overrideWebpackConfig(_ref) {
  var context = _ref.context,
    webpackConfig = _ref.webpackConfig,
    _ref$pluginOptions = _ref.pluginOptions,
    pluginOptions = _ref$pluginOptions === void 0 ? {} : _ref$pluginOptions;
  webpackConfig.module.rules.push({
    test: /static\.app\.(js|mjs|jsx|ts|tsx)$/,
    use: [{
      loader: path.resolve(__dirname, './asset-senhub-loader.js'),
      options: _objectSpread(_objectSpread({}, defaultOptions), pluginOptions)
    }, {
      loader: 'babel-loader',
      options: {
        presets: ['@babel/preset-env'],
        plugins: ['@babel/plugin-transform-modules-commonjs', [require.resolve('babel-plugin-module-resolver'), {
          root: webpackConfig.resolve.modules
        }]]
      }
    }]
  });
  return webpackConfig;
};
module.exports = {
  overrideWebpackConfig: overrideWebpackConfig
};
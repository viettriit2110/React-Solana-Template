{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { PublicKey } from '@solana/web3.js';\nimport { createLoggerMiddleware, COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from '@toruslabs/base-controllers';\nimport { setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback, BasePostMessageStream } from '@toruslabs/openlogin-jrpc';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport dequal from 'fast-deep-equal';\nvar version = \"0.3.2\";\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: method => `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: maxEventListeners => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}}`,\n    invalidRequestArgs: () => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: () => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: () => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: () => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: method => `'args.logger' must include required method '${method}'.`\n  },\n  info: {\n    connected: chainId => `Torus: Connected to chain with ID \"${chainId}\".`\n  },\n  warnings: {}\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\"\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: `torus-${window.location.hostname}`\n};\nvar log = loglevel.getLogger(\"solana-embed\");\n\n// utility functions\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req\n      });\n    }\n    next(done => {\n      const {\n        error\n      } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`Torus - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = `Torus: Lost connection to \"${remoteLabel}\".`;\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getWindowId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async buildEnv => {\n  let torusUrl;\n  let logLevel;\n  // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://solana.tor.us`;\n      logLevel = \"error\";\n      break;\n  }\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = {\n  height: 660,\n  width: 375\n};\nconst FEATURES_DEFAULT_WALLET_WINDOW = {\n  height: 740,\n  width: 1315\n};\nconst FEATURES_DEFAULT_POPUP_WINDOW = {\n  height: 700,\n  width: 1200\n};\nconst FEATURES_CONFIRM_WINDOW = {\n  height: 600,\n  width: 400\n};\nfunction storageAvailable(type) {\n  let storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && (\n    // everything except Firefox\n    e.code === 22 ||\n    // Firefox\n    e.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" ||\n    // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n/**\n * popup handler utils\n */\nfunction getPopupFeatures(_ref) {\n  let {\n    width: w,\n    height: h\n  } = _ref;\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\nclass BaseProvider extends SafeEventEmitter {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super();\n    _defineProperty(this, \"isTorus\", void 0);\n    _defineProperty(this, \"_rpcEngine\", void 0);\n    _defineProperty(this, \"jsonRpcConnectionEvents\", void 0);\n    _defineProperty(this, \"_state\", void 0);\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"Torus\"));\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n    // setup own event listeners\n    // connect to async provider\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\"));\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({\n      origin: location.origin\n    }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  send(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  sendAsync(payload) {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n}\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nclass PopupHandler extends SafeEventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"features\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    _defineProperty(this, \"windowTimer\", void 0);\n    _defineProperty(this, \"iClosedWindow\", void 0);\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n  open() {\n    var _this$window;\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nclass TorusCommunicationProvider extends BaseProvider {\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    });\n    // private state\n    _defineProperty(this, \"embedTranslations\", void 0);\n    _defineProperty(this, \"torusUrl\", void 0);\n    _defineProperty(this, \"dappStorageKey\", void 0);\n    _defineProperty(this, \"windowRefs\", void 0);\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n    _defineProperty(this, \"torusIframe\", void 0);\n    this._state = _objectSpread$2({}, TorusCommunicationProvider._defaultState);\n    // public state\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {};\n    // setup own event listeners\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n    const notificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const {\n          isFullScreen,\n          rid\n        } = params;\n        this._displayIframe({\n          isFull: isFullScreen,\n          rid: rid\n        });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const {\n          windowId,\n          url\n        } = params;\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const {\n          currentLoginProvider\n        } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n        this._displayIframe();\n      }\n    };\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n  get isLoggedIn() {\n    return this._state.isLoggedIn;\n  }\n  get isIFrameFullScreen() {\n    return this._state.isIFrameFullScreen;\n  }\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n  isConnected() {\n    return this._state.isConnected;\n  }\n  async _initializeState(params) {\n    try {\n      const {\n        torusUrl,\n        dappStorageKey,\n        torusAlertContainer,\n        torusIframe\n      } = params;\n      this.torusUrl = torusUrl;\n      this.dappStorageKey = dappStorageKey;\n      this.torusAlertContainer = torusAlertContainer;\n      this.torusIframe = torusIframe;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const {\n        currentLoginProvider,\n        isLoggedIn\n      } = await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      });\n      // indicate that we've connected, for EIP-1193 compliance\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  _handleWindow(windowId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const finalUrl = new URL(url || `${this.torusUrl}/redirect?windowId=${windowId}`);\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += `&dappStorageKey=${this.dappStorageKey}`;else finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    const handledWindow = new PopupHandler({\n      url: finalUrl,\n      target,\n      features\n    });\n    handledWindow.open();\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n      return;\n    }\n    // Add to collection only if window is opened\n    this.windowRefs[windowId] = handledWindow;\n    // We tell the iframe that the window has been successfully opened\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: {\n        windowId\n      }\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: {\n          windowId\n        }\n      });\n    });\n  }\n  _displayIframe() {\n    let {\n      isFull = false,\n      rid = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const style = {};\n    // set phase\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: {\n        isIFrameFullScreen: isFull,\n        rid\n      }\n    });\n  }\n  hideTorusButton() {\n    this._state.torusWidgetVisibility = false;\n    this._displayIframe();\n  }\n  showTorusButton() {\n    this._state.torusWidgetVisibility = true;\n    this._displayIframe();\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  _rpcRequest(payload, callback) {\n    const cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n  _handleConnect(currentLoginProvider, isLoggedIn) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        currentLoginProvider,\n        isLoggedIn\n      });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n  // Called if the iframe wants to close the window cause it is done processing the request\n  _handleCloseWindow(params) {\n    const {\n      windowId\n    } = params;\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n  async _createPopupBlockAlert(windowId, url) {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` + \"<div>\" + `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` + `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n  getLogoUrl() {\n    const logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    return logoUrl;\n  }\n}\n_defineProperty(TorusCommunicationProvider, \"_defaultState\", {\n  buttonPosition: \"bottom-left\",\n  currentLoginProvider: null,\n  isIFrameFullScreen: false,\n  hasEmittedConnection: false,\n  torusWidgetVisibility: false,\n  initialized: false,\n  isLoggedIn: false,\n  isPermanentlyDisconnected: false,\n  isConnected: false\n});\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nclass TorusInPageProvider extends BaseProvider {\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    });\n    // private state\n    _defineProperty(this, \"chainId\", void 0);\n    _defineProperty(this, \"selectedAddress\", void 0);\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n    this._state = _objectSpread$1({}, TorusInPageProvider._defaultState);\n    // public state\n    this.selectedAddress = null;\n    this.chainId = null;\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    // setup own event listeners\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n    const jsonRpcNotificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params);\n      }\n    };\n    // json rpc notification listener\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected() {\n    return this._state.isConnected;\n  }\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked\n      } = await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      });\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", {\n        chainId\n      });\n      this._handleChainChanged({\n        chainId\n      });\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n        return;\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  _handleChainChanged() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", {\n        chainId\n      });\n      return;\n    }\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n}\n_defineProperty(TorusInPageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\n/**\n * Returns whether the given image URL exists\n */\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window) {\n  try {\n    const {\n      document\n    } = window;\n    // Use the site's favicon if it exists\n    let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n    // Search through available icons in no particular order\n    icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\");\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = `${torusUrl}/frame`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\nclass Torus {\n  constructor() {\n    let {\n      modalZIndex = 99999\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"isInitialized\", void 0);\n    _defineProperty(this, \"torusAlert\", void 0);\n    _defineProperty(this, \"modalZIndex\", void 0);\n    _defineProperty(this, \"alertZIndex\", void 0);\n    _defineProperty(this, \"requestedLoginProvider\", void 0);\n    _defineProperty(this, \"provider\", void 0);\n    _defineProperty(this, \"communicationProvider\", void 0);\n    _defineProperty(this, \"dappStorageKey\", void 0);\n    _defineProperty(this, \"isTopupHidden\", false);\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n    _defineProperty(this, \"torusUrl\", void 0);\n    _defineProperty(this, \"torusIframe\", void 0);\n    _defineProperty(this, \"styleLink\", void 0);\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n  get isLoggedIn() {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      network,\n      showTorusButton = false,\n      useLocalStorage = false,\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      apiKey = \"torus-default\",\n      extraParams = {},\n      whiteLabel\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv);\n    log.enableAll();\n    log.info(torusUrl, \"url loaded\");\n    log.info(`Solana Embed Version :${version}`);\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";else torusIframeUrl.pathname += \"/frame\";\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n    torusIframeUrl.hash = hashParams.toString();\n    // Iframe code\n    this.torusIframe = htmlToElement(`<iframe\n        id=\"torusIframe\"\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex.toString()}\"\n      ></iframe>`);\n    this.torusAlertContainer = htmlToElement(`<div id=\"torusAlertContainer\" style=\"display:none; z-index: ${this.alertZIndex.toString()}\"></div>`);\n    this.styleLink = htmlToElement(`<link href=\"${torusUrl}/css/widget.css\" rel=\"stylesheet\" type=\"text/css\">`);\n    const handleSetup = async () => {\n      return new Promise((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata();\n            // send init params here\n            this.torusIframe.contentWindow.postMessage({\n              buttonPosition,\n              apiKey,\n              network,\n              dappMetadata,\n              extraParams,\n              whiteLabel\n            }, torusIframeUrl.origin);\n            await this._setupWeb3({\n              torusUrl\n            });\n            if (showTorusButton) this.showTorusButton();\n            if (whiteLabel !== null && whiteLabel !== void 0 && whiteLabel.topupHide) this.isTopupHidden = whiteLabel.topupHide;else this.hideTorusButton();\n            this.isInitialized = true;\n            window.torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n    await documentReady();\n    await handleSetup();\n  }\n  async login() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({\n          isFull: true\n        });\n      }\n      // If user is already logged in, we assume they have given access to the website\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest({\n          method: \"solana_requestAccounts\",\n          params: [this.requestedLoginProvider, params.login_hint]\n        }, getRpcPromiseCallback(resolve, reject));\n      });\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      }\n      // This would never happen, but just in case\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n  async loginWithPrivateKey(loginParams) {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    const {\n      success\n    } = await this.communicationProvider.request({\n      method: \"login_with_private_key\",\n      params: {\n        privateKey,\n        userInfo\n      }\n    });\n    if (!success) throw new Error(\"Login Failed\");\n  }\n  async logout() {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: []\n    });\n    this.requestedLoginProvider = null;\n  }\n  async cleanUp() {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof Document;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n  hideTorusButton() {\n    this.communicationProvider.hideTorusButton();\n  }\n  showTorusButton() {\n    this.communicationProvider.showTorusButton();\n  }\n  async setProvider(params) {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: _objectSpread({}, params)\n    });\n  }\n  async showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const instanceId = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: []\n    });\n    const finalPath = path ? `/${path}` : \"\";\n    const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n    // Using URL constructor to prevent js injection and allow parameter validation.!\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach(x => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n    if (this.dappStorageKey) {\n      finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    // No need to track this window state. Hence, no _handleWindow call.\n    const walletWindow = new PopupHandler({\n      url: finalUrl,\n      features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW)\n    });\n    walletWindow.open();\n  }\n  async getUserInfo() {\n    const userInfoResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: []\n    });\n    return userInfoResponse;\n  }\n  async initiateTopup(provider, params) {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n    this.communicationProvider._handleWindow(windowId);\n    const topupResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: {\n        provider,\n        params,\n        windowId\n      }\n    });\n    return topupResponse;\n  }\n  // Solana specific API\n  async getAccounts() {\n    const response = await this.provider.request({\n      method: \"getAccounts\",\n      params: []\n    });\n    return response;\n  }\n  async sendTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"send_transaction\",\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\")\n      }\n    });\n    return response;\n  }\n  // support sendOptions\n  async signAndSendTransaction(transaction, options) {\n    const response = await this.provider.request({\n      method: \"send_transaction\",\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\"),\n        options\n      }\n    });\n    return {\n      signature: response\n    };\n  }\n  async signTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"sign_transaction\",\n      params: {\n        message: transaction.serializeMessage().toString(\"hex\"),\n        messageOnly: true\n      }\n    });\n    // reconstruct signature pair\n    const parsed = JSON.parse(response);\n    const signature = {\n      publicKey: new PublicKey(parsed.publicKey),\n      signature: Buffer.from(parsed.signature, \"hex\")\n    };\n    transaction.addSignature(signature.publicKey, signature.signature);\n    return transaction;\n  }\n  async signAllTransactions(transactions) {\n    const encodedMessage = transactions.map(tx => {\n      return tx.serializeMessage().toString(\"hex\");\n    });\n    const responses = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: {\n        message: encodedMessage,\n        messageOnly: true\n      }\n    });\n    // reconstruct signature pairs\n    const signatures = responses.map(item => {\n      const parsed = JSON.parse(item);\n      return {\n        publicKey: new PublicKey(parsed.publicKey),\n        signature: Buffer.from(parsed.signature, \"hex\")\n      };\n    });\n    transactions.forEach((tx, idx) => {\n      tx.addSignature(signatures[idx].publicKey, signatures[idx].signature);\n      return tx;\n    });\n    return transactions;\n  }\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data\n      }\n    });\n    return response;\n  }\n  async getGaslessPublicKey() {\n    const response = await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: []\n    });\n    return response;\n  }\n  // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n  handleDappStorageKey(useLocalStorage) {\n    let dappStorageKey = \"\";\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;else {\n        const generatedKey = `torus-app-${getWindowId()}`;\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n  async _setupWeb3(providerParams) {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow\n    });\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow\n    });\n    // compose the inPage provider\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n    inPageProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        });\n        // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n        _payload.windowId = windowId;\n      }\n      inPageProvider._rpcEngine.handle(_payload, cb);\n    };\n    communicationProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW) // todo: are these features generic for all\n        });\n        // for communication methods sending window id in jrpc req params\n        _payload.params.windowId = windowId;\n      }\n      communicationProvider._rpcEngine.handle(_payload, cb);\n    };\n    // detect solana_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inPageProvider[m];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const {\n          method,\n          params = []\n        } = request;\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({\n            loginProvider: params[0]\n          });\n          self.login({\n            loginProvider: params[0]\n          })\n          // eslint-disable-next-line promise/no-callback-in-promise\n          .then(res => cb(null, res))\n          // eslint-disable-next-line promise/no-callback-in-promise\n          .catch(err => cb(err));\n        }\n        return originalMethod.apply(this, [request, cb]);\n      };\n    };\n    // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n    await Promise.all([inPageProvider._initializeState(), communicationProvider._initializeState(_objectSpread(_objectSpread({}, providerParams), {}, {\n      dappStorageKey: this.dappStorageKey,\n      torusAlertContainer: this.torusAlertContainer,\n      torusIframe: this.torusIframe\n    }))]);\n    log.debug(\"Torus - injected provider\");\n  }\n}\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInPageProvider, Torus as default };","map":{"version":3,"mappings":"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","names":["errors","disconnected","permanentlyDisconnected","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","api","prodTorusUrl","localStorageKey","window","location","hostname","loglevel","getLogger","createErrorMiddleware","req","res","next","error","ethErrors","rpc","invalidRequest","message","data","done","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getWindowId","Math","random","toString","slice","getTorusUrl","buildEnv","torusUrl","logLevel","getUserLanguage","userLanguage","navigator","language","userLanguages","split","Object","prototype","hasOwnProperty","call","config","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","storageAvailable","type","storage","x","setItem","removeItem","e","code","name","length","getPopupFeatures","_ref","w","h","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","systemZoom","left","abs","top","features","BaseProvider","SafeEventEmitter","constructor","jsonRpcStreamName","_defineProperty","isDuplexStream","connectionStream","Error","messages","isTorus","setMaxListeners","_handleConnect","bind","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","request","sendAsync","mux","ObjectMultiplex","pump","ignoreStream","jsonRpcConnection","createStreamMiddleware","stream","createStream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","createLoggerMiddleware","origin","middleware","_rpcEngine","jsonRpcConnectionEvents","events","args","Array","isArray","params","Promise","resolve","reject","getRpcPromiseCallback","send","payload","callback","streamName","handleEvent","handle","eventName","handler","handlerArgs","handlerWrapper","removeEventListener","addEventListener","documentReady","readyState","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PopupHandler","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","href","_this$window","focus","close","redirect","locationReplaceOnRedirect","replace","TorusCommunicationProvider","_state","_defaultState","dappStorageKey","languageTranslations","configuration","embedTranslations","windowRefs","on","isConnected","notificationHandler","COMMUNICATION_NOTIFICATIONS","IFRAME_STATUS","isFullScreen","rid","_displayIframe","isFull","CREATE_WINDOW","windowId","_createPopupBlockAlert","CLOSE_WINDOW","_handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusAlertContainer","torusIframe","COMMUNICATION_JRPC_METHODS","GET_PROVIDER_STATE","initialized","_handleWindow","finalUrl","URL","hash","handledWindow","OPENED_WINDOW","once","CLOSED_WINDOW","style","display","torusWidgetVisibility","buttonPosition","right","bottom","assign","hideTorusButton","showTorusButton","cb","_payload","jsonrpc","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumRpcError","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","bindOnLoad","remove","children","attachOnLoad","hasEmittedConnection","TorusInPageProvider","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","jsonRpcNotificationHandler","PROVIDER_NOTIFICATIONS","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","accounts","isUnlocked","PROVIDER_JRPC_METHODS","isInternal","err","result","isEthAccounts","finalAccounts","account","dequal","imgExists","img","onload","onerror","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","SET_PROVIDER","isLocalStorageAvailable","preLoadIframe","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","init","enableLogging","network","useLocalStorage","apiKey","extraParams","whiteLabel","setAPIKey","enableAll","version","setDefaultLevel","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","handleSetup","body","dappMetadata","contentWindow","postMessage","_setupWeb3","topupHide","isTopupHidden","torus","login","arguments","loginProvider","provider","login_hint","loginWithPrivateKey","loginParams","privateKey","userInfo","success","logout","LOGOUT","cleanUp","clearInit","isElement","element","Element","Document","contains","setProvider","showWallet","path","instanceId","WALLET_INSTANCE_ID","finalPath","searchParams","keys","forEach","walletWindow","getUserInfo","userInfoResponse","USER_INFO","initiateTopup","topupResponse","TOPUP","getAccounts","response","sendTransaction","transaction","serialize","requireAllSignatures","signAndSendTransaction","options","signature","signTransaction","serializeMessage","messageOnly","parsed","JSON","parse","publicKey","PublicKey","Buffer","addSignature","signAllTransactions","transactions","encodedMessage","map","tx","responses","signatures","item","idx","signMessage","getGaslessPublicKey","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","BasePostMessageStream","targetWindow","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","m","originalMethod","self","providerFunc","then","catch","apply","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all"],"sources":["../../src/messages.ts","../../src/interfaces.ts","../../src/config.ts","../../src/loglevel.ts","../../src/utils.ts","../../src/baseProvider.ts","../../src/embedUtils.ts","../../src/PopupHandler.ts","../../src/communicationProvider.ts","../../src/inPageProvider.ts","../../src/siteMetadata.ts","../../src/embed.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
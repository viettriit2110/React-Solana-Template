{"ast":null,"code":"import { createContext, useContext } from 'react';\nconst EMPTY_ARRAY = [];\nconst DEFAULT_CONTEXT = {\n  autoConnect: false,\n  connecting: false,\n  connected: false,\n  disconnecting: false,\n  select(_name) {\n    console.error(constructMissingProviderErrorMessage('get', 'select'));\n  },\n  connect() {\n    return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'connect')));\n  },\n  disconnect() {\n    return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'disconnect')));\n  },\n  sendTransaction(_transaction, _connection, _options) {\n    return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'sendTransaction')));\n  },\n  signTransaction(_transaction) {\n    return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'signTransaction')));\n  },\n  signAllTransactions(_transaction) {\n    return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'signAllTransactions')));\n  },\n  signMessage(_message) {\n    return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'signMessage')));\n  }\n};\nObject.defineProperty(DEFAULT_CONTEXT, 'wallets', {\n  get() {\n    console.error(constructMissingProviderErrorMessage('read', 'wallets'));\n    return EMPTY_ARRAY;\n  }\n});\nObject.defineProperty(DEFAULT_CONTEXT, 'wallet', {\n  get() {\n    console.error(constructMissingProviderErrorMessage('read', 'wallet'));\n    return null;\n  }\n});\nObject.defineProperty(DEFAULT_CONTEXT, 'publicKey', {\n  get() {\n    console.error(constructMissingProviderErrorMessage('read', 'publicKey'));\n    return null;\n  }\n});\nfunction constructMissingProviderErrorMessage(action, valueName) {\n  return 'You have tried to ' + ` ${action} \"${valueName}\"` + ' on a WalletContext without providing one.' + ' Make sure to render a WalletProvider' + ' as an ancestor of the component that uses ' + 'WalletContext';\n}\nexport const WalletContext = createContext(DEFAULT_CONTEXT);\nexport function useWallet() {\n  return useContext(WalletContext);\n}","map":{"version":3,"mappings":"AAUA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AA0BjD,MAAMC,WAAW,GAAyB,EAAE;AAE5C,MAAMC,eAAe,GAAG;EACpBC,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE,KAAK;EAChBC,aAAa,EAAE,KAAK;EACpBC,MAAM,CAACC,KAAwB;IAC3BC,OAAO,CAACC,KAAK,CAACC,oCAAoC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;EACxE,CAAC;EACDC,OAAO;IACH,OAAOC,OAAO,CAACC,MAAM,CAACL,OAAO,CAACC,KAAK,CAACC,oCAAoC,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;EAChG,CAAC;EACDI,UAAU;IACN,OAAOF,OAAO,CAACC,MAAM,CAACL,OAAO,CAACC,KAAK,CAACC,oCAAoC,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC;EACnG,CAAC;EACDK,eAAe,CACXC,YAAgD,EAChDC,WAAuB,EACvBC,QAAiC;IAEjC,OAAON,OAAO,CAACC,MAAM,CAACL,OAAO,CAACC,KAAK,CAACC,oCAAoC,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC,CAAC;EACxG,CAAC;EACDS,eAAe,CAACH,YAAyB;IACrC,OAAOJ,OAAO,CAACC,MAAM,CAACL,OAAO,CAACC,KAAK,CAACC,oCAAoC,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC,CAAC;EACxG,CAAC;EACDU,mBAAmB,CAACJ,YAA2B;IAC3C,OAAOJ,OAAO,CAACC,MAAM,CAACL,OAAO,CAACC,KAAK,CAACC,oCAAoC,CAAC,KAAK,EAAE,qBAAqB,CAAC,CAAC,CAAC;EAC5G,CAAC;EACDW,WAAW,CAACC,QAAoB;IAC5B,OAAOV,OAAO,CAACC,MAAM,CAACL,OAAO,CAACC,KAAK,CAACC,oCAAoC,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,CAAC;EACpG;CACmB;AACvBa,MAAM,CAACC,cAAc,CAACvB,eAAe,EAAE,SAAS,EAAE;EAC9CwB,GAAG;IACCjB,OAAO,CAACC,KAAK,CAACC,oCAAoC,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACtE,OAAOV,WAAW;EACtB;CACH,CAAC;AACFuB,MAAM,CAACC,cAAc,CAACvB,eAAe,EAAE,QAAQ,EAAE;EAC7CwB,GAAG;IACCjB,OAAO,CAACC,KAAK,CAACC,oCAAoC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACrE,OAAO,IAAI;EACf;CACH,CAAC;AACFa,MAAM,CAACC,cAAc,CAACvB,eAAe,EAAE,WAAW,EAAE;EAChDwB,GAAG;IACCjB,OAAO,CAACC,KAAK,CAACC,oCAAoC,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IACxE,OAAO,IAAI;EACf;CACH,CAAC;AAEF,SAASA,oCAAoC,CAACgB,MAAc,EAAEC,SAAiB;EAC3E,OACI,oBAAoB,GACpB,IAAID,MAAM,KAAKC,SAAS,GAAG,GAC3B,4CAA4C,GAC5C,uCAAuC,GACvC,6CAA6C,GAC7C,eAAe;AAEvB;AAEA,OAAO,MAAMC,aAAa,GAAG9B,aAAa,CAAqBG,eAAqC,CAAC;AAErG,OAAM,SAAU4B,SAAS;EACrB,OAAO9B,UAAU,CAAC6B,aAAa,CAAC;AACpC","names":["createContext","useContext","EMPTY_ARRAY","DEFAULT_CONTEXT","autoConnect","connecting","connected","disconnecting","select","_name","console","error","constructMissingProviderErrorMessage","connect","Promise","reject","disconnect","sendTransaction","_transaction","_connection","_options","signTransaction","signAllTransactions","signMessage","_message","Object","defineProperty","get","action","valueName","WalletContext","useWallet"],"sourceRoot":"","sources":["../../src/useWallet.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
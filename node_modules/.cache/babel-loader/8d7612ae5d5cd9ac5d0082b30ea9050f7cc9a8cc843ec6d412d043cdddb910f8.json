{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport EventEmitter from \"events\";\nimport { TransportRaceCondition, TransportError, StatusCodes, getAltStatusMessage, TransportStatusError } from \"@ledgerhq/errors\";\nexport { TransportError, TransportStatusError, StatusCodes, getAltStatusMessage };\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\nvar Transport = /** @class */function () {\n  function Transport() {\n    var _this = this;\n    this.exchangeTimeout = 30000;\n    this.unresponsiveTimeout = 15000;\n    this.deviceModel = null;\n    this._events = new EventEmitter();\n    /**\n     * wrapper on top of exchange to simplify work of the implementation.\n     * @param cla\n     * @param ins\n     * @param p1\n     * @param p2\n     * @param data\n     * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n     * @return a Promise of response buffer\n     */\n    this.send = function (cla, ins, p1, p2, data, statusList) {\n      if (data === void 0) {\n        data = Buffer.alloc(0);\n      }\n      if (statusList === void 0) {\n        statusList = [StatusCodes.OK];\n      }\n      return __awaiter(_this, void 0, void 0, function () {\n        var response, sw;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (data.length >= 256) {\n                throw new TransportError(\"data.length exceed 256 bytes limit. Got: \" + data.length, \"DataLengthTooBig\");\n              }\n              return [4 /*yield*/, this.exchange(Buffer.concat([Buffer.from([cla, ins, p1, p2]), Buffer.from([data.length]), data]))];\n            case 1:\n              response = _a.sent();\n              sw = response.readUInt16BE(response.length - 2);\n              if (!statusList.some(function (s) {\n                return s === sw;\n              })) {\n                throw new TransportStatusError(sw);\n              }\n              return [2 /*return*/, response];\n          }\n        });\n      });\n    };\n    this.exchangeAtomicImpl = function (f) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var resolveBusy, busyPromise, unresponsiveReached, timeout, res;\n        var _this = this;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (this.exchangeBusyPromise) {\n                throw new TransportRaceCondition(\"An action was already pending on the Ledger device. Please deny or reconnect.\");\n              }\n              busyPromise = new Promise(function (r) {\n                resolveBusy = r;\n              });\n              this.exchangeBusyPromise = busyPromise;\n              unresponsiveReached = false;\n              timeout = setTimeout(function () {\n                unresponsiveReached = true;\n                _this.emit(\"unresponsive\");\n              }, this.unresponsiveTimeout);\n              _a.label = 1;\n            case 1:\n              _a.trys.push([1,, 3, 4]);\n              return [4 /*yield*/, f()];\n            case 2:\n              res = _a.sent();\n              if (unresponsiveReached) {\n                this.emit(\"responsive\");\n              }\n              return [2 /*return*/, res];\n            case 3:\n              clearTimeout(timeout);\n              if (resolveBusy) resolveBusy();\n              this.exchangeBusyPromise = null;\n              return [7 /*endfinally*/];\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    this._appAPIlock = null;\n  }\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  Transport.prototype.exchange = function (_apdu) {\n    throw new Error(\"exchange not implemented\");\n  };\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n  Transport.prototype.setScrambleKey = function (_key) {};\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n  Transport.prototype.close = function () {\n    return Promise.resolve();\n  };\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n  Transport.prototype.on = function (eventName, cb) {\n    this._events.on(eventName, cb);\n  };\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n  Transport.prototype.off = function (eventName, cb) {\n    this._events.removeListener(eventName, cb);\n  };\n  Transport.prototype.emit = function (event) {\n    var _a;\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    (_a = this._events).emit.apply(_a, __spreadArray([event], __read(args), false));\n  };\n  /**\n   * Enable or not logs of the binary exchange\n   */\n  Transport.prototype.setDebugMode = function () {\n    console.warn(\"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\");\n  };\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n  Transport.prototype.setExchangeTimeout = function (exchangeTimeout) {\n    this.exchangeTimeout = exchangeTimeout;\n  };\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n  Transport.prototype.setExchangeUnresponsiveTimeout = function (unresponsiveTimeout) {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  };\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\n  TransportFoo.create().then(transport => ...)\n   */\n  Transport.create = function (openTimeout, listenTimeout) {\n    var _this = this;\n    if (openTimeout === void 0) {\n      openTimeout = 3000;\n    }\n    return new Promise(function (resolve, reject) {\n      var found = false;\n      var sub = _this.listen({\n        next: function (e) {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          _this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: function (e) {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: function () {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          if (!found) {\n            reject(new TransportError(_this.ErrorMessage_NoDeviceFound, \"NoDeviceFound\"));\n          }\n        }\n      });\n      var listenTimeoutId = listenTimeout ? setTimeout(function () {\n        sub.unsubscribe();\n        reject(new TransportError(_this.ErrorMessage_ListenTimeout, \"ListenTimeout\"));\n      }, listenTimeout) : null;\n    });\n  };\n  Transport.prototype.decorateAppAPIMethods = function (self, methods, scrambleKey) {\n    var e_1, _a;\n    try {\n      for (var methods_1 = __values(methods), methods_1_1 = methods_1.next(); !methods_1_1.done; methods_1_1 = methods_1.next()) {\n        var methodName = methods_1_1.value;\n        self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (methods_1_1 && !methods_1_1.done && (_a = methods_1[\"return\"])) _a.call(methods_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  Transport.prototype.decorateAppAPIMethod = function (methodName, f, ctx, scrambleKey) {\n    var _this = this;\n    return function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return __awaiter(_this, void 0, void 0, function () {\n        var _appAPIlock;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _appAPIlock = this._appAPIlock;\n              if (_appAPIlock) {\n                return [2 /*return*/, Promise.reject(new TransportError(\"Ledger Device is busy (lock \" + _appAPIlock + \")\", \"TransportLocked\"))];\n              }\n              _a.label = 1;\n            case 1:\n              _a.trys.push([1,, 3, 4]);\n              this._appAPIlock = methodName;\n              this.setScrambleKey(scrambleKey);\n              return [4 /*yield*/, f.apply(ctx, args)];\n            case 2:\n              return [2 /*return*/, _a.sent()];\n            case 3:\n              this._appAPIlock = null;\n              return [7 /*endfinally*/];\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n  };\n\n  Transport.ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n  Transport.ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n  return Transport;\n}();\nexport default Transport;","map":{"version":3,"mappings":"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","names":["EventEmitter","TransportRaceCondition","TransportError","StatusCodes","getAltStatusMessage","TransportStatusError","cla","ins","p1","p2","data","statusList","Buffer","alloc","OK","length","exchange","concat","from","response","_a","sw","readUInt16BE","some","s","f","exchangeBusyPromise","busyPromise","Promise","r","resolveBusy","unresponsiveReached","timeout","setTimeout","_this","emit","unresponsiveTimeout","res","clearTimeout","Transport","_apdu","Error","_key","resolve","eventName","cb","_events","on","removeListener","event","_i","args","console","warn","exchangeTimeout","openTimeout","listenTimeout","reject","found","sub","listen","next","e","unsubscribe","listenTimeoutId","open","descriptor","then","error","complete","ErrorMessage_NoDeviceFound","ErrorMessage_ListenTimeout","self","methods","scrambleKey","methodName","decorateAppAPIMethod","ctx","_appAPIlock","setScrambleKey","apply"],"sourceRoot":"","sources":["../src/Transport.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}